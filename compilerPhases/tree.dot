digraph ParseTree {
  node [shape=box, fontname="Courier"];
  node0 [label="program"];
  node1 [label="func_def_list"];
  node2 [label="func_def"];
  node3 [label="int\n[KEYWORD]"];
  node2 -> node3;
  node4 [label="main\n[IDENTIFIER]"];
  node2 -> node4;
  node5 [label="(\n[LPAREN]"];
  node2 -> node5;
  node6 [label=")\n[RPAREN]"];
  node2 -> node6;
  node7 [label="block"];
  node8 [label="{\n[LBRACE]"];
  node7 -> node8;
  node9 [label="decl"];
  node10 [label="int\n[KEYWORD]"];
  node9 -> node10;
  node11 [label="x\n[IDENTIFIER]"];
  node9 -> node11;
  node12 [label=";\n[SEMICOLON]"];
  node9 -> node12;
  node7 -> node9;
  node13 [label="decl"];
  node14 [label="int\n[KEYWORD]"];
  node13 -> node14;
  node15 [label="y\n[IDENTIFIER]"];
  node13 -> node15;
  node16 [label=";\n[SEMICOLON]"];
  node13 -> node16;
  node7 -> node13;
  node17 [label="decl"];
  node18 [label="int\n[KEYWORD]"];
  node17 -> node18;
  node19 [label="z\n[IDENTIFIER]"];
  node17 -> node19;
  node20 [label=";\n[SEMICOLON]"];
  node17 -> node20;
  node7 -> node17;
  node21 [label="stmt"];
  node22 [label="x\n[IDENTIFIER]"];
  node21 -> node22;
  node23 [label="=\n[ASSIGN]"];
  node21 -> node23;
  node24 [label="expr"];
  node25 [label="10\n[NUMBER]"];
  node24 -> node25;
  node21 -> node24;
  node26 [label=";\n[SEMICOLON]"];
  node21 -> node26;
  node7 -> node21;
  node27 [label="stmt"];
  node28 [label="y\n[IDENTIFIER]"];
  node27 -> node28;
  node29 [label="=\n[ASSIGN]"];
  node27 -> node29;
  node30 [label="expr"];
  node31 [label="5\n[NUMBER]"];
  node30 -> node31;
  node27 -> node30;
  node32 [label=";\n[SEMICOLON]"];
  node27 -> node32;
  node7 -> node27;
  node33 [label="stmt"];
  node34 [label="z\n[IDENTIFIER]"];
  node33 -> node34;
  node35 [label="=\n[ASSIGN]"];
  node33 -> node35;
  node36 [label="expr"];
  node37 [label="x\n[IDENTIFIER]"];
  node36 -> node37;
  node38 [label="-\n[OPERATOR]"];
  node36 -> node38;
  node39 [label="expr"];
  node40 [label="y\n[IDENTIFIER]"];
  node39 -> node40;
  node36 -> node39;
  node33 -> node36;
  node41 [label=";\n[SEMICOLON]"];
  node33 -> node41;
  node7 -> node33;
  node42 [label="stmt"];
  node43 [label="if\n[KEYWORD]"];
  node42 -> node43;
  node44 [label="(\n[LPAREN]"];
  node42 -> node44;
  node45 [label="expr"];
  node46 [label="z\n[IDENTIFIER]"];
  node45 -> node46;
  node47 [label="<\n[OPERATOR]"];
  node45 -> node47;
  node48 [label="expr"];
  node49 [label="10\n[NUMBER]"];
  node48 -> node49;
  node45 -> node48;
  node42 -> node45;
  node50 [label=")\n[RPAREN]"];
  node42 -> node50;
  node51 [label="block"];
  node52 [label="{\n[LBRACE]"];
  node51 -> node52;
  node53 [label="stmt"];
  node54 [label="z\n[IDENTIFIER]"];
  node53 -> node54;
  node55 [label="=\n[ASSIGN]"];
  node53 -> node55;
  node56 [label="expr"];
  node57 [label="z\n[IDENTIFIER]"];
  node56 -> node57;
  node58 [label="+\n[OPERATOR]"];
  node56 -> node58;
  node59 [label="expr"];
  node60 [label="5\n[NUMBER]"];
  node59 -> node60;
  node56 -> node59;
  node53 -> node56;
  node61 [label=";\n[SEMICOLON]"];
  node53 -> node61;
  node51 -> node53;
  node62 [label="}\n[RBRACE]"];
  node51 -> node62;
  node42 -> node51;
  node63 [label="else\n[KEYWORD]"];
  node42 -> node63;
  node64 [label="block"];
  node65 [label="{\n[LBRACE]"];
  node64 -> node65;
  node66 [label="stmt"];
  node67 [label="z\n[IDENTIFIER]"];
  node66 -> node67;
  node68 [label="=\n[ASSIGN]"];
  node66 -> node68;
  node69 [label="expr"];
  node70 [label="z\n[IDENTIFIER]"];
  node69 -> node70;
  node71 [label="-\n[OPERATOR]"];
  node69 -> node71;
  node72 [label="expr"];
  node73 [label="5\n[NUMBER]"];
  node72 -> node73;
  node69 -> node72;
  node66 -> node69;
  node74 [label=";\n[SEMICOLON]"];
  node66 -> node74;
  node64 -> node66;
  node75 [label="}\n[RBRACE]"];
  node64 -> node75;
  node42 -> node64;
  node7 -> node42;
  node76 [label="stmt"];
  node77 [label="while\n[KEYWORD]"];
  node76 -> node77;
  node78 [label="(\n[LPAREN]"];
  node76 -> node78;
  node79 [label="expr"];
  node80 [label="z\n[IDENTIFIER]"];
  node79 -> node80;
  node81 [label="<\n[OPERATOR]"];
  node79 -> node81;
  node82 [label="expr"];
  node83 [label="20\n[NUMBER]"];
  node82 -> node83;
  node79 -> node82;
  node76 -> node79;
  node84 [label=")\n[RPAREN]"];
  node76 -> node84;
  node85 [label="block"];
  node86 [label="{\n[LBRACE]"];
  node85 -> node86;
  node87 [label="stmt"];
  node88 [label="z\n[IDENTIFIER]"];
  node87 -> node88;
  node89 [label="=\n[ASSIGN]"];
  node87 -> node89;
  node90 [label="expr"];
  node91 [label="z\n[IDENTIFIER]"];
  node90 -> node91;
  node92 [label="+\n[OPERATOR]"];
  node90 -> node92;
  node93 [label="expr"];
  node94 [label="2\n[NUMBER]"];
  node93 -> node94;
  node90 -> node93;
  node87 -> node90;
  node95 [label=";\n[SEMICOLON]"];
  node87 -> node95;
  node85 -> node87;
  node96 [label="}\n[RBRACE]"];
  node85 -> node96;
  node76 -> node85;
  node7 -> node76;
  node97 [label="stmt"];
  node98 [label="return\n[KEYWORD]"];
  node97 -> node98;
  node99 [label="expr"];
  node100 [label="z\n[IDENTIFIER]"];
  node99 -> node100;
  node97 -> node99;
  node101 [label=";\n[SEMICOLON]"];
  node97 -> node101;
  node7 -> node97;
  node102 [label="}\n[RBRACE]"];
  node7 -> node102;
  node2 -> node7;
  node1 -> node2;
  node0 -> node1;
}
